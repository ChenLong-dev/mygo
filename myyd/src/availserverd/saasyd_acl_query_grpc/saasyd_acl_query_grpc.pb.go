// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: saasyd_acl_query_grpc.proto

package saasyd_acl_query_grpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Code int32

const (
	Code_SUCCESS Code = 0
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0: "SUCCESS",
	}
	Code_value = map[string]int32{
		"SUCCESS": 0,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_saasyd_acl_query_grpc_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_saasyd_acl_query_grpc_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_saasyd_acl_query_grpc_proto_rawDescGZIP(), []int{0}
}

type AclResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Type   string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *AclResultReq) Reset() {
	*x = AclResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_acl_query_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AclResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclResultReq) ProtoMessage() {}

func (x *AclResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_acl_query_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclResultReq.ProtoReflect.Descriptor instead.
func (*AclResultReq) Descriptor() ([]byte, []int) {
	return file_saasyd_acl_query_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *AclResultReq) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AclResultReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AclResultReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type AclResultRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*AclResultRsp_Data `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AclResultRsp) Reset() {
	*x = AclResultRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_acl_query_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AclResultRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclResultRsp) ProtoMessage() {}

func (x *AclResultRsp) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_acl_query_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclResultRsp.ProtoReflect.Descriptor instead.
func (*AclResultRsp) Descriptor() ([]byte, []int) {
	return file_saasyd_acl_query_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *AclResultRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AclResultRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AclResultRsp) GetData() []*AclResultRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type AclResultRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessUrl string `protobuf:"bytes,1,opt,name=business_url,json=businessUrl,proto3" json:"business_url,omitempty"`
	Result      string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AclResultRsp_Data) Reset() {
	*x = AclResultRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_acl_query_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AclResultRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclResultRsp_Data) ProtoMessage() {}

func (x *AclResultRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_acl_query_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclResultRsp_Data.ProtoReflect.Descriptor instead.
func (*AclResultRsp_Data) Descriptor() ([]byte, []int) {
	return file_saasyd_acl_query_grpc_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AclResultRsp_Data) GetBusinessUrl() string {
	if x != nil {
		return x.BusinessUrl
	}
	return ""
}

func (x *AclResultRsp_Data) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_saasyd_acl_query_grpc_proto protoreflect.FileDescriptor

var file_saasyd_acl_query_grpc_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73,
	0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x22, 0x50, 0x0a, 0x0c, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x6c, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3c, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x61,
	0x61, 0x73, 0x79, 0x64, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x73, 0x70,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x41, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x13,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x00, 0x32, 0x6c, 0x0a, 0x0d, 0x41, 0x63, 0x6c, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x5b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x61,
	0x63, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x61, 0x61,
	0x73, 0x79, 0x64, 0x5f, 0x61, 0x63, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_saasyd_acl_query_grpc_proto_rawDescOnce sync.Once
	file_saasyd_acl_query_grpc_proto_rawDescData = file_saasyd_acl_query_grpc_proto_rawDesc
)

func file_saasyd_acl_query_grpc_proto_rawDescGZIP() []byte {
	file_saasyd_acl_query_grpc_proto_rawDescOnce.Do(func() {
		file_saasyd_acl_query_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_saasyd_acl_query_grpc_proto_rawDescData)
	})
	return file_saasyd_acl_query_grpc_proto_rawDescData
}

var file_saasyd_acl_query_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_saasyd_acl_query_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_saasyd_acl_query_grpc_proto_goTypes = []interface{}{
	(Code)(0),                 // 0: saasyd_acl_query_grpc.Code
	(*AclResultReq)(nil),      // 1: saasyd_acl_query_grpc.AclResultReq
	(*AclResultRsp)(nil),      // 2: saasyd_acl_query_grpc.AclResultRsp
	(*AclResultRsp_Data)(nil), // 3: saasyd_acl_query_grpc.AclResultRsp.Data
}
var file_saasyd_acl_query_grpc_proto_depIdxs = []int32{
	3, // 0: saasyd_acl_query_grpc.AclResultRsp.data:type_name -> saasyd_acl_query_grpc.AclResultRsp.Data
	1, // 1: saasyd_acl_query_grpc.AclGrpcServer.GetAclResults:input_type -> saasyd_acl_query_grpc.AclResultReq
	2, // 2: saasyd_acl_query_grpc.AclGrpcServer.GetAclResults:output_type -> saasyd_acl_query_grpc.AclResultRsp
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_saasyd_acl_query_grpc_proto_init() }
func file_saasyd_acl_query_grpc_proto_init() {
	if File_saasyd_acl_query_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_saasyd_acl_query_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AclResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_acl_query_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AclResultRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_acl_query_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AclResultRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_saasyd_acl_query_grpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_saasyd_acl_query_grpc_proto_goTypes,
		DependencyIndexes: file_saasyd_acl_query_grpc_proto_depIdxs,
		EnumInfos:         file_saasyd_acl_query_grpc_proto_enumTypes,
		MessageInfos:      file_saasyd_acl_query_grpc_proto_msgTypes,
	}.Build()
	File_saasyd_acl_query_grpc_proto = out.File
	file_saasyd_acl_query_grpc_proto_rawDesc = nil
	file_saasyd_acl_query_grpc_proto_goTypes = nil
	file_saasyd_acl_query_grpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AclGrpcServerClient is the client API for AclGrpcServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AclGrpcServerClient interface {
	//获取acl检测结果
	GetAclResults(ctx context.Context, in *AclResultReq, opts ...grpc.CallOption) (*AclResultRsp, error)
}

type aclGrpcServerClient struct {
	cc grpc.ClientConnInterface
}

func NewAclGrpcServerClient(cc grpc.ClientConnInterface) AclGrpcServerClient {
	return &aclGrpcServerClient{cc}
}

func (c *aclGrpcServerClient) GetAclResults(ctx context.Context, in *AclResultReq, opts ...grpc.CallOption) (*AclResultRsp, error) {
	out := new(AclResultRsp)
	err := c.cc.Invoke(ctx, "/saasyd_acl_query_grpc.AclGrpcServer/GetAclResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AclGrpcServerServer is the server API for AclGrpcServer service.
type AclGrpcServerServer interface {
	//获取acl检测结果
	GetAclResults(context.Context, *AclResultReq) (*AclResultRsp, error)
}

// UnimplementedAclGrpcServerServer can be embedded to have forward compatible implementations.
type UnimplementedAclGrpcServerServer struct {
}

func (*UnimplementedAclGrpcServerServer) GetAclResults(context.Context, *AclResultReq) (*AclResultRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAclResults not implemented")
}

func RegisterAclGrpcServerServer(s *grpc.Server, srv AclGrpcServerServer) {
	s.RegisterService(&_AclGrpcServer_serviceDesc, srv)
}

func _AclGrpcServer_GetAclResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AclResultReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AclGrpcServerServer).GetAclResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saasyd_acl_query_grpc.AclGrpcServer/GetAclResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AclGrpcServerServer).GetAclResults(ctx, req.(*AclResultReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AclGrpcServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "saasyd_acl_query_grpc.AclGrpcServer",
	HandlerType: (*AclGrpcServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAclResults",
			Handler:    _AclGrpcServer_GetAclResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "saasyd_acl_query_grpc.proto",
}
