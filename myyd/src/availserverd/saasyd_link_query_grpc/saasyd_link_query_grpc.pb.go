// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: saasyd_link_query_grpc.proto

package saasyd_link_query_grpc

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Type int32

const (
	Type_LinkResult   Type = 0
	Type_TargetResult Type = 1
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "LinkResult",
		1: "TargetResult",
	}
	Type_value = map[string]int32{
		"LinkResult":   0,
		"TargetResult": 1,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_saasyd_link_query_grpc_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_saasyd_link_query_grpc_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{0}
}

type LinkResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Type   Type   `protobuf:"varint,3,opt,name=type,proto3,enum=saasyd_link_query_grpc.Type" json:"type,omitempty"`
}

func (x *LinkResultReq) Reset() {
	*x = LinkResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkResultReq) ProtoMessage() {}

func (x *LinkResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkResultReq.ProtoReflect.Descriptor instead.
func (*LinkResultReq) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *LinkResultReq) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LinkResultReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *LinkResultReq) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_LinkResult
}

type LinkResultRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *LinkResultRsp_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *LinkResultRsp) Reset() {
	*x = LinkResultRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkResultRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkResultRsp) ProtoMessage() {}

func (x *LinkResultRsp) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkResultRsp.ProtoReflect.Descriptor instead.
func (*LinkResultRsp) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *LinkResultRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LinkResultRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LinkResultRsp) GetData() *LinkResultRsp_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type UrlResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string                   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Primarys map[string]*RegionResult `protobuf:"bytes,2,rep,name=primarys,proto3" json:"primarys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Seconds  map[string]*RegionResult `protobuf:"bytes,3,rep,name=seconds,proto3" json:"seconds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UrlResult) Reset() {
	*x = UrlResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlResult) ProtoMessage() {}

func (x *UrlResult) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlResult.ProtoReflect.Descriptor instead.
func (*UrlResult) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *UrlResult) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UrlResult) GetPrimarys() map[string]*RegionResult {
	if x != nil {
		return x.Primarys
	}
	return nil
}

func (x *UrlResult) GetSeconds() map[string]*RegionResult {
	if x != nil {
		return x.Seconds
	}
	return nil
}

type RegionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region      string                      `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	LineResults []*RegionResult_LineResults `protobuf:"bytes,2,rep,name=lineResults,proto3" json:"lineResults,omitempty"`
}

func (x *RegionResult) Reset() {
	*x = RegionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionResult) ProtoMessage() {}

func (x *RegionResult) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionResult.ProtoReflect.Descriptor instead.
func (*RegionResult) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *RegionResult) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RegionResult) GetLineResults() []*RegionResult_LineResults {
	if x != nil {
		return x.LineResults
	}
	return nil
}

type ResultsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointBound  uint32 `protobuf:"varint,1,opt,name=pointBound,proto3" json:"pointBound,omitempty"`
	RegionBound uint32 `protobuf:"varint,2,opt,name=regionBound,proto3" json:"regionBound,omitempty"`
	Type        Type   `protobuf:"varint,3,opt,name=type,proto3,enum=saasyd_link_query_grpc.Type" json:"type,omitempty"`
}

func (x *ResultsReq) Reset() {
	*x = ResultsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsReq) ProtoMessage() {}

func (x *ResultsReq) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsReq.ProtoReflect.Descriptor instead.
func (*ResultsReq) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *ResultsReq) GetPointBound() uint32 {
	if x != nil {
		return x.PointBound
	}
	return 0
}

func (x *ResultsReq) GetRegionBound() uint32 {
	if x != nil {
		return x.RegionBound
	}
	return 0
}

func (x *ResultsReq) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_LinkResult
}

type ResultsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data map[string]*CheckResult `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResultsRsp) Reset() {
	*x = ResultsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsRsp) ProtoMessage() {}

func (x *ResultsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsRsp.ProtoReflect.Descriptor instead.
func (*ResultsRsp) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *ResultsRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResultsRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResultsRsp) GetData() map[string]*CheckResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url           string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	PrimaryResult int32  `protobuf:"varint,2,opt,name=PrimaryResult,proto3" json:"PrimaryResult,omitempty"`
	SecondResult  int32  `protobuf:"varint,3,opt,name=SecondResult,proto3" json:"SecondResult,omitempty"`
}

func (x *CheckResult) Reset() {
	*x = CheckResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResult) ProtoMessage() {}

func (x *CheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResult.ProtoReflect.Descriptor instead.
func (*CheckResult) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *CheckResult) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CheckResult) GetPrimaryResult() int32 {
	if x != nil {
		return x.PrimaryResult
	}
	return 0
}

func (x *CheckResult) GetSecondResult() int32 {
	if x != nil {
		return x.SecondResult
	}
	return 0
}

type ResultsAddrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResultsAddrReq) Reset() {
	*x = ResultsAddrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsAddrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsAddrReq) ProtoMessage() {}

func (x *ResultsAddrReq) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsAddrReq.ProtoReflect.Descriptor instead.
func (*ResultsAddrReq) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{7}
}

type ResultsAddrRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data map[string]*CheckAddrResult `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResultsAddrRsp) Reset() {
	*x = ResultsAddrRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsAddrRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsAddrRsp) ProtoMessage() {}

func (x *ResultsAddrRsp) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsAddrRsp.ProtoReflect.Descriptor instead.
func (*ResultsAddrRsp) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *ResultsAddrRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResultsAddrRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResultsAddrRsp) GetData() map[string]*CheckAddrResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckAddrResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName string `protobuf:"bytes,1,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	Result   int32  `protobuf:"varint,2,opt,name=Result,proto3" json:"Result,omitempty"`
	Line     *Line  `protobuf:"bytes,3,opt,name=Line,proto3" json:"Line,omitempty"`
}

func (x *CheckAddrResult) Reset() {
	*x = CheckAddrResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAddrResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAddrResult) ProtoMessage() {}

func (x *CheckAddrResult) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAddrResult.ProtoReflect.Descriptor instead.
func (*CheckAddrResult) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *CheckAddrResult) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *CheckAddrResult) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *CheckAddrResult) GetLine() *Line {
	if x != nil {
		return x.Line
	}
	return nil
}

type Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=Addr,proto3" json:"Addr,omitempty"`
	Isp  int32  `protobuf:"varint,2,opt,name=Isp,proto3" json:"Isp,omitempty"`
}

func (x *Line) Reset() {
	*x = Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Line) ProtoMessage() {}

func (x *Line) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Line.ProtoReflect.Descriptor instead.
func (*Line) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *Line) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Line) GetIsp() int32 {
	if x != nil {
		return x.Isp
	}
	return 0
}

type LinkResultRsp_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checktime int64                 `protobuf:"varint,1,opt,name=checktime,proto3" json:"checktime,omitempty"`
	Results   map[string]*UrlResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LinkResultRsp_Data) Reset() {
	*x = LinkResultRsp_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkResultRsp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkResultRsp_Data) ProtoMessage() {}

func (x *LinkResultRsp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkResultRsp_Data.ProtoReflect.Descriptor instead.
func (*LinkResultRsp_Data) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{1, 0}
}

func (x *LinkResultRsp_Data) GetChecktime() int64 {
	if x != nil {
		return x.Checktime
	}
	return 0
}

func (x *LinkResultRsp_Data) GetResults() map[string]*UrlResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type RegionResult_LineResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line   *RegionResult_LineResults_Line   `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
	Result *RegionResult_LineResults_Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RegionResult_LineResults) Reset() {
	*x = RegionResult_LineResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionResult_LineResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionResult_LineResults) ProtoMessage() {}

func (x *RegionResult_LineResults) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionResult_LineResults.ProtoReflect.Descriptor instead.
func (*RegionResult_LineResults) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{3, 0}
}

func (x *RegionResult_LineResults) GetLine() *RegionResult_LineResults_Line {
	if x != nil {
		return x.Line
	}
	return nil
}

func (x *RegionResult_LineResults) GetResult() *RegionResult_LineResults_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type RegionResult_LineResults_Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Isp  int32  `protobuf:"varint,2,opt,name=isp,proto3" json:"isp,omitempty"`
}

func (x *RegionResult_LineResults_Line) Reset() {
	*x = RegionResult_LineResults_Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionResult_LineResults_Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionResult_LineResults_Line) ProtoMessage() {}

func (x *RegionResult_LineResults_Line) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionResult_LineResults_Line.ProtoReflect.Descriptor instead.
func (*RegionResult_LineResults_Line) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *RegionResult_LineResults_Line) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *RegionResult_LineResults_Line) GetIsp() int32 {
	if x != nil {
		return x.Isp
	}
	return 0
}

type RegionResult_LineResults_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Delay  int64  `protobuf:"varint,3,opt,name=delay,proto3" json:"delay,omitempty"`
}

func (x *RegionResult_LineResults_Result) Reset() {
	*x = RegionResult_LineResults_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saasyd_link_query_grpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionResult_LineResults_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionResult_LineResults_Result) ProtoMessage() {}

func (x *RegionResult_LineResults_Result) ProtoReflect() protoreflect.Message {
	mi := &file_saasyd_link_query_grpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionResult_LineResults_Result.ProtoReflect.Descriptor instead.
func (*RegionResult_LineResults_Result) Descriptor() ([]byte, []int) {
	return file_saasyd_link_query_grpc_proto_rawDescGZIP(), []int{3, 0, 1}
}

func (x *RegionResult_LineResults_Result) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RegionResult_LineResults_Result) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RegionResult_LineResults_Result) GetDelay() int64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

var File_saasyd_link_query_grpc_proto protoreflect.FileDescriptor

var file_saasyd_link_query_grpc_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x22, 0x6f, 0x0a, 0x0d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xce, 0x02, 0x0a, 0x0d, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0xd6, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x5d, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x61, 0x61,
	0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf9, 0x02, 0x0a, 0x09, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x4b, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x61, 0x61,
	0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x73, 0x12, 0x48, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a,
	0x61, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x60, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa0, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a,
	0x0b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x52, 0x0b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x1a, 0xa3, 0x02, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x49, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4f, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73,
	0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x2c, 0x0a,
	0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x73, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x73, 0x70, 0x1a, 0x4a, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x80, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x42, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x0a, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x73,
	0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x5c, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x69, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x22, 0xde, 0x01, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x60, 0x0a, 0x09, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x61, 0x61, 0x73,
	0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x77, 0x0a,
	0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x6e, 0x65,
	0x52, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x22, 0x2c, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x49, 0x73, 0x70, 0x2a, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x01, 0x32, 0xb2,
	0x02, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x64, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25,
	0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x61, 0x61, 0x73,
	0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x62, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x26, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x61, 0x61, 0x73,
	0x79, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_saasyd_link_query_grpc_proto_rawDescOnce sync.Once
	file_saasyd_link_query_grpc_proto_rawDescData = file_saasyd_link_query_grpc_proto_rawDesc
)

func file_saasyd_link_query_grpc_proto_rawDescGZIP() []byte {
	file_saasyd_link_query_grpc_proto_rawDescOnce.Do(func() {
		file_saasyd_link_query_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_saasyd_link_query_grpc_proto_rawDescData)
	})
	return file_saasyd_link_query_grpc_proto_rawDescData
}

var file_saasyd_link_query_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_saasyd_link_query_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_saasyd_link_query_grpc_proto_goTypes = []interface{}{
	(Type)(0),                               // 0: saasyd_link_query_grpc.Type
	(*LinkResultReq)(nil),                   // 1: saasyd_link_query_grpc.LinkResultReq
	(*LinkResultRsp)(nil),                   // 2: saasyd_link_query_grpc.LinkResultRsp
	(*UrlResult)(nil),                       // 3: saasyd_link_query_grpc.UrlResult
	(*RegionResult)(nil),                    // 4: saasyd_link_query_grpc.RegionResult
	(*ResultsReq)(nil),                      // 5: saasyd_link_query_grpc.ResultsReq
	(*ResultsRsp)(nil),                      // 6: saasyd_link_query_grpc.ResultsRsp
	(*CheckResult)(nil),                     // 7: saasyd_link_query_grpc.CheckResult
	(*ResultsAddrReq)(nil),                  // 8: saasyd_link_query_grpc.ResultsAddrReq
	(*ResultsAddrRsp)(nil),                  // 9: saasyd_link_query_grpc.ResultsAddrRsp
	(*CheckAddrResult)(nil),                 // 10: saasyd_link_query_grpc.CheckAddrResult
	(*Line)(nil),                            // 11: saasyd_link_query_grpc.Line
	(*LinkResultRsp_Data)(nil),              // 12: saasyd_link_query_grpc.LinkResultRsp.Data
	nil,                                     // 13: saasyd_link_query_grpc.LinkResultRsp.Data.ResultsEntry
	nil,                                     // 14: saasyd_link_query_grpc.UrlResult.PrimarysEntry
	nil,                                     // 15: saasyd_link_query_grpc.UrlResult.SecondsEntry
	(*RegionResult_LineResults)(nil),        // 16: saasyd_link_query_grpc.RegionResult.LineResults
	(*RegionResult_LineResults_Line)(nil),   // 17: saasyd_link_query_grpc.RegionResult.LineResults.Line
	(*RegionResult_LineResults_Result)(nil), // 18: saasyd_link_query_grpc.RegionResult.LineResults.Result
	nil,                                     // 19: saasyd_link_query_grpc.ResultsRsp.DataEntry
	nil,                                     // 20: saasyd_link_query_grpc.ResultsAddrRsp.DataEntry
}
var file_saasyd_link_query_grpc_proto_depIdxs = []int32{
	0,  // 0: saasyd_link_query_grpc.LinkResultReq.type:type_name -> saasyd_link_query_grpc.Type
	12, // 1: saasyd_link_query_grpc.LinkResultRsp.data:type_name -> saasyd_link_query_grpc.LinkResultRsp.Data
	14, // 2: saasyd_link_query_grpc.UrlResult.primarys:type_name -> saasyd_link_query_grpc.UrlResult.PrimarysEntry
	15, // 3: saasyd_link_query_grpc.UrlResult.seconds:type_name -> saasyd_link_query_grpc.UrlResult.SecondsEntry
	16, // 4: saasyd_link_query_grpc.RegionResult.lineResults:type_name -> saasyd_link_query_grpc.RegionResult.LineResults
	0,  // 5: saasyd_link_query_grpc.ResultsReq.type:type_name -> saasyd_link_query_grpc.Type
	19, // 6: saasyd_link_query_grpc.ResultsRsp.data:type_name -> saasyd_link_query_grpc.ResultsRsp.DataEntry
	20, // 7: saasyd_link_query_grpc.ResultsAddrRsp.data:type_name -> saasyd_link_query_grpc.ResultsAddrRsp.DataEntry
	11, // 8: saasyd_link_query_grpc.CheckAddrResult.Line:type_name -> saasyd_link_query_grpc.Line
	13, // 9: saasyd_link_query_grpc.LinkResultRsp.Data.results:type_name -> saasyd_link_query_grpc.LinkResultRsp.Data.ResultsEntry
	3,  // 10: saasyd_link_query_grpc.LinkResultRsp.Data.ResultsEntry.value:type_name -> saasyd_link_query_grpc.UrlResult
	4,  // 11: saasyd_link_query_grpc.UrlResult.PrimarysEntry.value:type_name -> saasyd_link_query_grpc.RegionResult
	4,  // 12: saasyd_link_query_grpc.UrlResult.SecondsEntry.value:type_name -> saasyd_link_query_grpc.RegionResult
	17, // 13: saasyd_link_query_grpc.RegionResult.LineResults.line:type_name -> saasyd_link_query_grpc.RegionResult.LineResults.Line
	18, // 14: saasyd_link_query_grpc.RegionResult.LineResults.result:type_name -> saasyd_link_query_grpc.RegionResult.LineResults.Result
	7,  // 15: saasyd_link_query_grpc.ResultsRsp.DataEntry.value:type_name -> saasyd_link_query_grpc.CheckResult
	10, // 16: saasyd_link_query_grpc.ResultsAddrRsp.DataEntry.value:type_name -> saasyd_link_query_grpc.CheckAddrResult
	1,  // 17: saasyd_link_query_grpc.LinkGrpcServer.GetLastPointResult:input_type -> saasyd_link_query_grpc.LinkResultReq
	5,  // 18: saasyd_link_query_grpc.LinkGrpcServer.GetResults:input_type -> saasyd_link_query_grpc.ResultsReq
	8,  // 19: saasyd_link_query_grpc.LinkGrpcServer.GetAddrResults:input_type -> saasyd_link_query_grpc.ResultsAddrReq
	2,  // 20: saasyd_link_query_grpc.LinkGrpcServer.GetLastPointResult:output_type -> saasyd_link_query_grpc.LinkResultRsp
	6,  // 21: saasyd_link_query_grpc.LinkGrpcServer.GetResults:output_type -> saasyd_link_query_grpc.ResultsRsp
	9,  // 22: saasyd_link_query_grpc.LinkGrpcServer.GetAddrResults:output_type -> saasyd_link_query_grpc.ResultsAddrRsp
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_saasyd_link_query_grpc_proto_init() }
func file_saasyd_link_query_grpc_proto_init() {
	if File_saasyd_link_query_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_saasyd_link_query_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkResultRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsAddrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsAddrRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAddrResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkResultRsp_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionResult_LineResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionResult_LineResults_Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saasyd_link_query_grpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionResult_LineResults_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_saasyd_link_query_grpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_saasyd_link_query_grpc_proto_goTypes,
		DependencyIndexes: file_saasyd_link_query_grpc_proto_depIdxs,
		EnumInfos:         file_saasyd_link_query_grpc_proto_enumTypes,
		MessageInfos:      file_saasyd_link_query_grpc_proto_msgTypes,
	}.Build()
	File_saasyd_link_query_grpc_proto = out.File
	file_saasyd_link_query_grpc_proto_rawDesc = nil
	file_saasyd_link_query_grpc_proto_goTypes = nil
	file_saasyd_link_query_grpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LinkGrpcServerClient is the client API for LinkGrpcServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LinkGrpcServerClient interface {
	//获取link当次检测结果
	GetLastPointResult(ctx context.Context, in *LinkResultReq, opts ...grpc.CallOption) (*LinkResultRsp, error)
	//获取link或target检测结果
	GetResults(ctx context.Context, in *ResultsReq, opts ...grpc.CallOption) (*ResultsRsp, error)
	//获取target检测线路结果
	GetAddrResults(ctx context.Context, in *ResultsAddrReq, opts ...grpc.CallOption) (*ResultsAddrRsp, error)
}

type linkGrpcServerClient struct {
	cc grpc.ClientConnInterface
}

func NewLinkGrpcServerClient(cc grpc.ClientConnInterface) LinkGrpcServerClient {
	return &linkGrpcServerClient{cc}
}

func (c *linkGrpcServerClient) GetLastPointResult(ctx context.Context, in *LinkResultReq, opts ...grpc.CallOption) (*LinkResultRsp, error) {
	out := new(LinkResultRsp)
	err := c.cc.Invoke(ctx, "/saasyd_link_query_grpc.LinkGrpcServer/GetLastPointResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkGrpcServerClient) GetResults(ctx context.Context, in *ResultsReq, opts ...grpc.CallOption) (*ResultsRsp, error) {
	out := new(ResultsRsp)
	err := c.cc.Invoke(ctx, "/saasyd_link_query_grpc.LinkGrpcServer/GetResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkGrpcServerClient) GetAddrResults(ctx context.Context, in *ResultsAddrReq, opts ...grpc.CallOption) (*ResultsAddrRsp, error) {
	out := new(ResultsAddrRsp)
	err := c.cc.Invoke(ctx, "/saasyd_link_query_grpc.LinkGrpcServer/GetAddrResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LinkGrpcServerServer is the server API for LinkGrpcServer service.
type LinkGrpcServerServer interface {
	//获取link当次检测结果
	GetLastPointResult(context.Context, *LinkResultReq) (*LinkResultRsp, error)
	//获取link或target检测结果
	GetResults(context.Context, *ResultsReq) (*ResultsRsp, error)
	//获取target检测线路结果
	GetAddrResults(context.Context, *ResultsAddrReq) (*ResultsAddrRsp, error)
}

// UnimplementedLinkGrpcServerServer can be embedded to have forward compatible implementations.
type UnimplementedLinkGrpcServerServer struct {
}

func (*UnimplementedLinkGrpcServerServer) GetLastPointResult(context.Context, *LinkResultReq) (*LinkResultRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLastPointResult not implemented")
}
func (*UnimplementedLinkGrpcServerServer) GetResults(context.Context, *ResultsReq) (*ResultsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResults not implemented")
}
func (*UnimplementedLinkGrpcServerServer) GetAddrResults(context.Context, *ResultsAddrReq) (*ResultsAddrRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddrResults not implemented")
}

func RegisterLinkGrpcServerServer(s *grpc.Server, srv LinkGrpcServerServer) {
	s.RegisterService(&_LinkGrpcServer_serviceDesc, srv)
}

func _LinkGrpcServer_GetLastPointResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkResultReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkGrpcServerServer).GetLastPointResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saasyd_link_query_grpc.LinkGrpcServer/GetLastPointResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkGrpcServerServer).GetLastPointResult(ctx, req.(*LinkResultReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkGrpcServer_GetResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResultsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkGrpcServerServer).GetResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saasyd_link_query_grpc.LinkGrpcServer/GetResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkGrpcServerServer).GetResults(ctx, req.(*ResultsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkGrpcServer_GetAddrResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResultsAddrReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkGrpcServerServer).GetAddrResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saasyd_link_query_grpc.LinkGrpcServer/GetAddrResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkGrpcServerServer).GetAddrResults(ctx, req.(*ResultsAddrReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LinkGrpcServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "saasyd_link_query_grpc.LinkGrpcServer",
	HandlerType: (*LinkGrpcServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLastPointResult",
			Handler:    _LinkGrpcServer_GetLastPointResult_Handler,
		},
		{
			MethodName: "GetResults",
			Handler:    _LinkGrpcServer_GetResults_Handler,
		},
		{
			MethodName: "GetAddrResults",
			Handler:    _LinkGrpcServer_GetAddrResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "saasyd_link_query_grpc.proto",
}
